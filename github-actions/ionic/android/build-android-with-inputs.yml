# This workflow create an Android debug/release APK for CapacitorJS (with or w/o Ionic) application
# it's a manual workflow which ask user for 2 optional inputs before running, 1. build environment 2. build variant - debug or release
# 
# The particular detail about the project where it was used:
# Tech: react web app using CapacitorJS for mobile
# Repository: private
#             Below steps like condition environment variables based on 'inputs.is_prod' can probably be simplified
#             using 'Environment secrets' option that is not available to private repositories

name: Ionic - Android APK - With Inputs

on:
  workflow_dispatch:
    inputs:
      is_prod:
        description: 'Build with Prod (default: staging)'
        required: false
        default: false
        type: boolean
      is_release:
        description: 'Build release APK (default: debug)'
        required: false
        default: false
        type: boolean
  # push:
  #   paths:
  #     - '**/*'
  #     - '!ios/**'
  #   branches:
  #     - main
  #     - ionic

jobs:
  build-apk:
    # permissions:
    #   contents: write
    name: Build Android APK
    runs-on: ubuntu-latest
    env:
      REACT_APP_URL: ${{ inputs.is_prod && secrets.URL_PROD || secrets.URL }}
      REACT_APP_BASE_URL: ${{ inputs.is_prod && secrets.BASE_URL_PROD || secrets.BASE_URL }}
      REACT_APP_COOKIE_DOMAIN: ${{ secrets.COOKIE_DOMAIN }}
      REACT_APP_MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup Web environment to install packages.
      - name: Setup Web environment
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      # Setup Java environment in order to build the Android app.
      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      # Setup gradle using official gradle action
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          generate-job-summary: false

      - name: Install Ionic CLI
        run: npm install -g @ionic/cli

      - name: Install packages
        run: npm ci  # also provide the same flags here that you would provide with 'npm install' command, Ex. 'npm ci --legacy-peer-deps'

      - name: Build the ionic project for Android
        run: ionic capacitor build android --prod --no-open
        # Github sets process.env.CI to true which treats warnings as errors, so to avoid build failure we're setting it to false here
        env:
          CI: false

      # Steps to create debug build
      - name: Build Android debug APK
        if: ${{ !inputs.is_release }}
        working-directory: android
        run: ./gradlew assembleDebug

      - name: Save apk file as artifact
        if: ${{ !inputs.is_release }}
        uses: actions/upload-artifact@v3
        with:
          name: ionic-build-debug-android
          path: android/app/build/outputs/apk/debug/app-debug.apk

      # Steps to create release build
      - name: Retrieve the keystore and decode it to a file
        if: ${{ inputs.is_release }}
        env:
          ANDROID_RELEASE_KEYSTORE_FILE: ${{ secrets.ANDROID_RELEASE_KEYSTORE_FILE }}
        run: |
          mkdir keys
          echo $ANDROID_RELEASE_KEYSTORE_FILE | base64 --decode > keys/release.keystore

      - name: Build Android release APK
        if: ${{ inputs.is_release }}
        working-directory: android
        run: ./gradlew assembleRelease

      - name: Sign created release APK with keystore
        if: ${{ inputs.is_release }}
        env:
          # The alias, key and keystore password can be different, but here we're using same secret for all
          ANDROID_RELEASE_KEYSTORE_CRED: ${{ secrets.ANDROID_RELEASE_KEYSTORE_CRED }}
          BUILD_TOOLS_VERSION: ${{ '32.0.0' }}
          UNSIGNED_APK_PATH: ${{ 'android/app/build/outputs/apk/release/app-release-unsigned.apk' }}
          SIGNED_APK_PATH: ${{ 'android/app/build/outputs/apk/release/ionic-release-signed.apk' }}
        run: |
          ${ANDROID_HOME}/build-tools/$BUILD_TOOLS_VERSION/apksigner sign \
          --ks keys/release.keystore \
          --ks-key-alias $ANDROID_RELEASE_KEYSTORE_CRED \
          --ks-pass pass:$ANDROID_RELEASE_KEYSTORE_CRED \
          --key-pass pass:$ANDROID_RELEASE_KEYSTORE_CRED \
          --out $SIGNED_APK_PATH $UNSIGNED_APK_PATH

      - name: Save apk file as artifact
        if: ${{ inputs.is_release }}
        uses: actions/upload-artifact@v3
        with:
          name: ionic-build-release-android
          path: android/app/build/outputs/apk/release/ionic-release-signed.apk
